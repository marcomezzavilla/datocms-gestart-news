---
import Layout from '~/layouts/Layout.astro';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { StructuredText } from '@datocms/astro';

import { isDraftModeEnabled } from '~/lib/draftMode';
import { DraftModeQueryListener } from '~/components/DraftModeQueryListener';
const draftModeEnabled = isDraftModeEnabled(Astro.cookies);

import { query } from './_graphql';

import { ImageBlock } from '~/components/blocks/ImageBlock';
import { VideoBlock } from '~/components/blocks/VideoBlock';
import { BlogPageInline } from '~/components/inlineRecord/BlogPageInline';
import { DocPageInline } from '~/components/inlineRecord/DocPageInline';

const variables = { slug: Astro.params.slug! };
const { page } = await executeQuery(query, { variables, includeDrafts: draftModeEnabled });

if (!page) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found',
  });
}
---

<Layout>
  <div class="flex items-center flex-col mt-12">
    <div class="w-full max-w-3xl">
      <a href="../" class="text-[#215aa8] mb-4 inline-block">Torna alle novit√†</a>
      <h1 class="text-center text-[40px] font-bold px-8 leading-tight">{page.title}</h1>
      <h2 class="text-2xl my-4 text-center">
        {page.abstract}
      </h2>

      <article class="mt-20">
        <StructuredText
          data={page.body}
          blockComponents={{
            ImageBlockRecord: ImageBlock,
            VideoBlockRecord: VideoBlock,
          }}
          inlineRecordComponents={{
            BlogPageRecord: BlogPageInline,
            DocPageRecord: DocPageInline,
          }}
        />
      </article>

      <DraftModeQueryListener query={query} />
    </div>
  </div>
</Layout>
